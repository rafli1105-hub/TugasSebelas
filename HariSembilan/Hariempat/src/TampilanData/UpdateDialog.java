/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package TampilanData;

/**
 *
 * @author ACER
 */
import java.awt.Frame;
import javax.swing.JFrame;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.Connection;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

public class UpdateDialog extends javax.swing.JDialog {

    /**
     * Creates new form UpdateDialog
     */
    public UpdateDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    private String oldIdKaryawan;

    public UpdateDialog(java.awt.Frame parent, boolean modal,
            String idk, String namatt, String alamatt, String gen, String shiftt) {
        super(parent, modal);
        initComponents();
        this.IDK.setText(idk);
        this.nama.setText(namatt);
        this.alamat.setText(alamatt);
        this.gender.setSelectedItem(gen);
        this.shift.setText(shiftt);
        this.oldIdKaryawan = idk;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idk = new javax.swing.JLabel();
        namat = new javax.swing.JLabel();
        alamatt = new javax.swing.JLabel();
        gen = new javax.swing.JLabel();
        shiftt = new javax.swing.JLabel();
        IDK = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        alamat = new javax.swing.JTextField();
        shift = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        idk.setText("ID Karyawan");

        namat.setText("Nama");

        alamatt.setText("Alamat");

        gen.setText("Gender");

        shiftt.setText("Shift");

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-Laki", "Perempuan" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Update");

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idk)
                        .addGap(32, 32, 32)
                        .addComponent(IDK, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alamatt)
                            .addComponent(namat)
                            .addComponent(gen))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shift, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(shiftt))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idk)
                            .addComponent(IDK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(namat))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alamatt)
                    .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gen)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shiftt)
                    .addComponent(shift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (IDK.getText().trim().isEmpty()
                || nama.getText().trim().isEmpty()
                || alamat.getText().trim().isEmpty()
                || gender.getSelectedItem() == null
                || shift.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Semua field harus diisi!");
            return;
        }

        String id = IDK.getText();
        String nama1 = nama.getText();
        String alamat1 = alamat.getText();
        String jenisKelamin = gender.getSelectedItem().toString();
        String shiftKerja = shift.getText().trim();

        EntityManagerFactory emf = null;
        EntityManager em = null;

        try {
            emf = Persistence.createEntityManagerFactory("HariKelimaPU");
            em = emf.createEntityManager();

            em.getTransaction().begin();

            Karyawan k = em.find(Karyawan.class, oldIdKaryawan);
            if (k == null) {
                JOptionPane.showMessageDialog(this, "Data karyawan tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                em.getTransaction().rollback();
                return;
            }
            if (!id.equals(oldIdKaryawan)) {
                Karyawan check = em.find(Karyawan.class, id);
                if (check != null) {
                    JOptionPane.showMessageDialog(this, "ID Karyawan baru sudah digunakan!", "Gagal", JOptionPane.ERROR_MESSAGE);
                    em.getTransaction().rollback();
                    return;
                }

                em.remove(k);
                em.flush();

                Karyawan baru = new Karyawan();
                baru.setIdkaryawan(id);
                baru.setNama(nama1);
                baru.setAlamat(alamat1);
                baru.setGender(jenisKelamin);
                baru.setShift(shiftKerja);
                em.persist(baru);
            } else {

                k.setNama(nama1);
                k.setAlamat(alamat1);
                k.setGender(jenisKelamin);
                k.setShift(shiftKerja);
                em.merge(k);
            }

            em.getTransaction().commit();

            JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");

            
            if (getParent() instanceof TampilanGui) {
                ((TampilanGui) getParent()).tampilkanData();
            }

            dispose();

        } catch (Exception e) {
            if (em != null && em.getTransaction().isActive()) {
                em.getTransaction().rollback();
            }
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            if (em != null) {
                em.close();
            }
            if (emf != null) {
                emf.close();
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDK;
    private javax.swing.JTextField alamat;
    private javax.swing.JLabel alamatt;
    private javax.swing.JLabel gen;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel idk;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nama;
    private javax.swing.JLabel namat;
    private javax.swing.JTextField shift;
    private javax.swing.JLabel shiftt;
    // End of variables declaration//GEN-END:variables
}
